{"version":3,"sources":["features/userSlice.js","firebase.js","Header.js","SidebarOption.js","features/mailSlice.js","Sidebar.js","Mail.js","Section.js","EmailRow.js","EmailList.js","SendMail.js","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Header","useSelector","dispatch","useDispatch","className","IconButton","src","alt","placeholder","type","Avatar","onClick","signOut","then","photoUrl","SidebarOption","Icon","title","number","selected","mailSlice","selectedMail","sendMessageIsOpen","selectMail","openSendMessage","CloseSendMessage","selectOpenMail","mail","selectSendMessageIsOpen","Sidebar","Button","startIcon","fontSize","InboxIcon","StarIcon","AccessTimeIcon","LabelImportantIcon","NearMeIcon","NoteIcon","ExpandMoreIcon","Mail","history","useHistory","push","subject","time","description","Section","color","style","borderBottom","EmailRow","id","Checkbox","EmailList","useState","emails","setEmails","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","PeopleIcon","LocalOfferIcon","to","message","timestamp","Date","seconds","toUTCString","SendMail","useForm","register","handleSubmit","errors","watch","onSubmit","formdata","console","log","add","ref","required","variant","Login","signInWithPopup","displayName","email","photoURL","catch","error","alert","App","onAuthStateChanged","component","path","configureStore","reducer","mailReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oiBAEaA,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAAa,CACXC,KAAM,MAERC,SAAU,CACRC,MAAO,SAACC,EAAOC,GACbD,EAAMH,KAAOI,EAAOC,SAEtBC,OAAQ,SAACH,GACPA,EAAMH,KAAO,SAKZ,EAA0BJ,EAAUW,QAA5BL,EAAK,EAALA,MAAOI,EAAM,EAANA,OAETE,EAAa,SAACL,GAAK,OAAKA,EAAMH,KAAKA,MAGjCJ,IAAiB,Q,QCNxBa,G,cADcC,IAASC,cAVR,CACnBC,OAAQ,0CACRC,WAAY,4BACZC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAIMC,aACjBC,EAAOV,IAASU,OAChBC,EAAW,IAAIX,IAASU,KAAKE,mB,OCoCtBC,MA1Cf,WAEI,IAAMvB,EAAOwB,YAAYhB,GACnBiB,EAAWC,cAQjB,OACQ,sBAAKC,UAAU,SAAQ,UACnB,sBAAKA,UAAU,eAAc,UACzB,cAACC,EAAA,EAAU,UACX,cAAC,IAAQ,MAET,qBACIC,IAAI,kKACJC,IAAI,QAIZ,sBAAKH,UAAU,iBAAgB,UAC/B,cAAC,IAAU,IACX,uBAAOI,YAAY,cAAcC,KAAK,SACtC,cAAC,IAAiB,CAACL,UAAU,0BAG7B,sBAAKA,UAAU,gBAAe,UAC1B,cAACC,EAAA,EAAU,UACP,cAAC,IAAQ,MAEb,cAACA,EAAA,EAAU,UACP,cAAC,IAAiB,MAEtB,cAACK,EAAA,EAAM,CAACC,QA/BR,WACZd,EAAKe,UAAUC,MAAK,WAChBX,EAASnB,SA6ByBuB,IAAS,OAAJ7B,QAAI,IAAJA,OAAI,EAAJA,EAAMqC,kB,2DClC1CC,MAXf,SAAuB,GAAmC,IAAjCC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SAC1C,OACI,sBAAKf,UAAS,wBAAmBe,GAAY,yBAA0B,UACnE,cAACH,EAAI,IACL,6BAAKC,IACL,4BAAIC,Q,6JCNHE,GAAY9C,YAAY,CACnCC,KAAM,OACNC,aAAa,CACX6C,aAAc,KACdC,mBAAmB,GAErB5C,SAAU,CACR6C,WAAY,SAAC3C,EAAOC,GAClBD,EAAMyC,aAAexC,EAAOC,SAE9B0C,gBAAiB,SAAC5C,GAChBA,EAAM0C,mBAAoB,GAE5BG,iBAAkB,SAAC7C,GACjBA,EAAM0C,mBAAoB,MAKzB,GAA0DF,GAAUpC,QAA5DuC,GAAU,GAAVA,WAAYC,GAAe,GAAfA,gBAAiBC,GAAgB,GAAhBA,iBAE/BC,GAAiB,SAAC9C,GAAK,OAAKA,EAAM+C,KAAKN,cAEvCO,GAA0B,SAAChD,GAAK,OAAKA,EAAM+C,KAAKL,mBAE9CF,MAAiB,QCmCjBS,OA5Cf,WAEI,IAAM3B,EAAWC,cAEjB,OACI,sBAAKC,UAAU,UAAS,UACpB,cAAC0B,EAAA,EAAM,CACPC,UAAW,cAAC,IAAO,CAACC,SAAS,UAC7B5B,UAAU,mBACVO,QAAS,kBAAMT,EAASsB,OAAmB,qBAKvC,cAAC,EAAa,CACdR,KAAMiB,IACNhB,MAAM,QACNC,OAAQ,GACRC,UAAU,IACV,cAAC,EAAa,CAACH,KAAMkB,IAAUjB,MAAM,UAAUC,OAAQ,KACvD,cAAC,EAAa,CAACF,KAAMmB,IAAgBlB,MAAM,UAAUC,OAAQ,KAC7D,cAAC,EAAa,CAACF,KAAMoB,IAAoBnB,MAAM,YAAYC,OAAQ,KACnE,cAAC,EAAa,CAACF,KAAMqB,IAAYpB,MAAM,OAAOC,OAAQ,KACtD,cAAC,EAAa,CAACF,KAAMsB,IAAUrB,MAAM,SAASC,OAAQ,KACtD,cAAC,EAAa,CAACF,KAAMuB,IAAgBtB,MAAM,OAAOC,OAAQ,KAC1D,qBAAKd,UAAU,kBAAiB,SAC5B,sBAAKA,UAAU,uBAAsB,UACrC,cAACC,EAAA,EAAU,UACP,cAAC,IAAU,MAEf,cAACA,EAAA,EAAU,UACP,cAAC,KAAO,MAEZ,cAACA,EAAA,EAAU,UACP,cAAC,KAAS,e,kPC+CnBmC,OA/Ef,WACI,IAAMC,EAAUC,eAEVrB,EAAepB,YAAYyB,IAEjC,OACI,sBAAKtB,UAAU,OAAM,UACjB,sBAAKA,UAAU,cAAa,UACxB,sBAAKA,UAAU,kBAAiB,UAC5B,cAACC,EAAA,EAAU,CAACM,QAAS,kBAAM8B,EAAQE,KAAK,MAAK,SACzC,cAAC,KAAa,MAGlB,cAACtC,EAAA,EAAU,UACP,cAAC,KAAe,MAGpB,cAACA,EAAA,EAAU,UACP,cAAC,KAAS,MAGd,cAACA,EAAA,EAAU,UACP,cAAC,KAAU,MAGf,cAACA,EAAA,EAAU,UACP,cAAC,KAAS,MAGd,cAACA,EAAA,EAAU,UACP,cAAC,KAAc,MAGnB,cAACA,EAAA,EAAU,UACP,cAAC,KAAe,MAGpB,cAACA,EAAA,EAAU,UACP,cAAC,IAAkB,MAGvB,cAACA,EAAA,EAAU,UACP,cAAC,KAAY,SAKrB,sBAAKD,UAAU,mBAAkB,UAC7B,cAACC,EAAA,EAAU,UACP,cAAC,KAAc,MAGnB,cAACA,EAAA,EAAU,UACP,cAAC,KAAS,MAGd,cAACA,EAAA,EAAU,UACP,cAAC,KAAa,YAM1B,sBAAKD,UAAU,aAAY,UACvB,sBAAKA,UAAU,mBAAkB,UACjC,6BAAiB,OAAZiB,QAAY,IAAZA,OAAY,EAAZA,EAAcuB,UACnB,cAAC,IAAkB,CAACxC,UAAU,oBAC9B,4BAAgB,OAAZiB,QAAY,IAAZA,OAAY,EAAZA,EAAcJ,QAClB,mBAAGb,UAAU,aAAY,SAAc,OAAZiB,QAAY,IAAZA,OAAY,EAAZA,EAAcwB,UAEzC,qBAAKzC,UAAU,gBAAe,SAC1B,4BAAgB,OAAZiB,QAAY,IAAZA,OAAY,EAAZA,EAAcyB,uB,6KC3EvBC,OAbf,SAAiB,GAAkC,IAAhC/B,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAO+B,EAAK,EAALA,MAAO7B,EAAQ,EAARA,SACnC,OACI,sBAAKf,UAAS,kBAAae,GAAY,qBACnC8B,MAAO,CACHC,aAAa,aAAD,OAAeF,GAC3BA,MAAM,GAAD,OAAK7B,GAAY6B,IACxB,UACE,cAAChC,EAAI,IACL,6BAAKC,Q,qCC+CNkC,OAjDf,SAAkB,GAA0C,IAAzCC,EAAE,EAAFA,GAAInC,EAAK,EAALA,MAAO2B,EAAO,EAAPA,QAASE,EAAW,EAAXA,YAAaD,EAAI,EAAJA,KAC1CJ,EAAUC,eACVxC,EAAWC,cAcjB,OACI,sBAAKQ,QAbQ,WACbT,EAASqB,GAAW,CAChB6B,KACAnC,QACA2B,UACAE,cACAD,UAGJJ,EAAQE,KAAK,UAIWvC,UAAU,WAAU,UAE5C,sBAAKA,UAAU,oBAAmB,UAC9B,cAACiD,GAAA,EAAQ,IACT,cAAChD,EAAA,EAAU,UACP,cAAC,KAAsB,MAE3B,cAACA,EAAA,EAAU,UACP,cAAC,IAA0B,SAKnC,oBAAID,UAAU,kBAAiB,SAC1Ba,IAGL,qBAAKb,UAAU,oBAAmB,SAClC,+BAAKwC,EACL,sBAAMxC,UAAU,wBAAuB,SAClC0C,SAKL,mBAAG1C,UAAU,wBAAuB,SACnCyC,QC0CMS,OA7Ef,WAEI,MAA4BC,mBAAS,IAAG,oBAAjCC,EAAM,KAAEC,EAAS,KASxB,OAPAC,qBAAU,WACNxE,EAAGyE,WAAW,UAAUC,QAAQ,YAAa,QAAQC,YAAW,SAAAC,GAAQ,OAAIL,EAAUK,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CAC5Gb,GAAIa,EAAIb,GACRc,KAAMD,EAAIC,iBAEf,IAGC,sBAAK9D,UAAU,YAAW,UACtB,sBAAKA,UAAU,sBAAqB,UAChC,sBAAKA,UAAU,0BAAyB,UACpC,cAACiD,GAAA,EAAQ,IACT,cAAChD,EAAA,EAAU,UACP,cAAC,IAAiB,MAEtB,cAACA,EAAA,EAAU,UACP,cAAC,KAAQ,MAEb,cAACA,EAAA,EAAU,UACP,cAAC,KAAY,SAGrB,sBAAKD,UAAU,2BAA0B,UACzC,cAACC,EAAA,EAAU,UACH,cAAC,KAAe,MAEpB,cAACA,EAAA,EAAU,UACP,cAAC,KAAgB,MAErB,cAACA,EAAA,EAAU,UACP,cAAC,KAAgB,MAErB,cAACA,EAAA,EAAU,UACP,cAAC,KAAY,YAK7B,sBAAKD,UAAU,sBAAqB,UAChC,cAAC,GAAO,CAACY,KAAMiB,IAAWhB,MAAM,UAAU+B,MAAM,MAAM7B,UAAQ,IAC9D,cAAC,GAAO,CAACH,KAAMmD,KAAYlD,MAAM,SAAS+B,MAAM,YAChD,cAAC,GAAO,CAAChC,KAAMoD,KAAgBnD,MAAM,aAAa+B,MAAM,aAG5D,sBAAK5C,UAAU,kBAAiB,UAC3BoD,GAAUA,EAAOQ,KAAI,gBAAEZ,EAAE,EAAFA,GAAG,EAAD,EAAEc,KAAQG,EAAE,EAAFA,GAAIzB,EAAO,EAAPA,QAAS0B,EAAO,EAAPA,QAASC,EAAS,EAATA,UAAS,OAC/D,cAAC,GAAQ,CACLnB,GAAIA,EAEJnC,MAAOoD,EACPzB,QAASA,EACTE,YAAawB,EACbzB,KAAM,IAAI2B,KAA0B,KAAZ,OAATD,QAAS,IAATA,OAAS,EAATA,EAAWE,UAAgBC,eAJrCtB,MAOb,cAAC,GAAQ,CACPnC,MAAM,UACN2B,QAAQ,wBACRE,YAAY,qBACZD,KAAK,SAEJ,cAAC,GAAQ,CACV5B,MAAM,UACN2B,QAAQ,wBACRE,YAAY,qBACZD,KAAK,gB,wCCTJ8B,OAnEf,WAEI,IAAMzE,EAAWC,cACjB,EAAkDyE,eAA1CC,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aAAqBC,GAAF,EAALC,MAAa,EAAND,QAgBvC,OACI,sBAAK3E,UAAU,WAAU,UACrB,sBAAKA,UAAU,mBAAkB,UACjC,6CACA,cAAC,KAAS,CAACO,QAAS,kBAAMT,EAASuB,OAAqBrB,UAAU,uBAGlE,uBAAM6E,SAAUH,GArBP,SAACI,GACdC,QAAQC,IAAIF,GACZhG,EAAGyE,WAAW,UAAU0B,IACpB,CACIhB,GAAIa,EAASb,GACbzB,QAASsC,EAAStC,QAClB0B,QAASY,EAASZ,QAClBC,UAAW,IAAIC,OAIvBtE,EAASuB,SAUkC,UAEnC,uBACIlD,KAAK,KACLiC,YAAY,KACZC,KAAK,QACL6E,IAAKT,EAAS,CAAEU,UAAU,MAEzBR,EAAOV,IAAM,mBAAGjE,UAAU,kBAAiB,4BAEhD,uBACI7B,KAAK,UACLiC,YAAY,UACZC,KAAK,OACL6E,IAAKT,EAAS,CAAEU,UAAU,MAEzBR,EAAOnC,SAAW,mBAAGxC,UAAU,kBAAiB,iCAErD,uBACI7B,KAAK,UACLiC,YAAY,aACZC,KAAK,OACLL,UAAU,oBACVkF,IAAKT,EAAS,CAAEU,UAAU,MAE7BR,EAAOT,SAAW,mBAAGlE,UAAU,kBAAiB,iCAErD,qBAAKA,UAAU,oBAAmB,SAC9B,cAAC0B,EAAA,EAAM,CACP1B,UAAU,iBACVoF,QAAQ,YACRxC,MAAM,UACNvC,KAAK,SAAQ,2B,UCnCdgF,I,OAzBD,WAEV,IAAMvF,EAAWC,cAYjB,OACI,qBAAKC,UAAU,QAAO,SAClB,sBAAKA,UAAU,mBAAkB,UAC7B,qBAAKE,IAAI,kKACRC,IAAI,KACJ,cAACuB,EAAA,EAAM,CAAC0D,QAAQ,YAAYxC,MAAM,UAAUrC,QAf1C,WACXd,EAAK6F,gBAAgB5F,GAAUe,MAAK,YAAe,IAAZpC,EAAI,EAAJA,KACnCyB,EAASvB,EAAM,CACXgH,YAAalH,EAAKkH,YAClBC,MAAOnH,EAAKmH,MACZ9E,SAAUrC,EAAKoH,eAEpBC,OAAM,SAAAC,GAAK,OAAIC,MAAMD,EAAMzB,aAQuC,0BC0C9D2B,OAhDf,WAEE,IAAM3E,EAAoBrB,YAAY2B,IAChCnD,EAAOwB,YAAYhB,GACnBiB,EAAWC,cAkBjB,OAhBAuD,qBAAU,WACR7D,EAAKqG,oBAAmB,SAAAzH,GACnBA,GAEDyB,EAASvB,EAAM,CACbgH,YAAalH,EAAKkH,YAClBC,MAAOnH,EAAKmH,MACZ9E,SAAUrC,EAAKoH,iBAOpB,IAGD,cAAC,KAAM,UACHpH,EAGA,sBAAK2B,UAAU,MAAK,UACpB,cAAC,EAAM,IAEP,sBAAKA,UAAU,YAAW,UAE3B,cAAC,GAAO,IAET,eAAC,KAAM,WACP,cAAC,KAAK,CAAC+F,UAAW3D,GAAM4D,KAAK,UAC7B,cAAC,KAAK,CAACD,UAAW7C,GAAW8C,KAAK,YAIjC9E,GAAqB,cAAC,GAAQ,OAf7B,cAAC,GAAK,OC1CC+E,eAAe,CAC5BC,QAAS,CACP3E,KAAM4E,GACN9H,KAAM+H,KCKUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,IAAQ,CAACC,MAAOA,GAAM,SACrB,cAAC,GAAG,QAGRC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzG,MAAK,SAAC0G,GAClCA,EAAaC,kB","file":"static/js/main.09731157.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState:{\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    }\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\n\nexport default userSlice.reducer;\n","// import firebase from 'firebase';\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCDHp8A_DR5s3aW2LtF8XBizyuRl05Abp0\",\n    authDomain: \"fir-40a7f.firebaseapp.com\",\n    projectId: \"fir-40a7f\",\n    storageBucket: \"fir-40a7f.appspot.com\",\n    messagingSenderId: \"35846629973\",\n    appId: \"1:35846629973:web:608b1fcbdbace3993142dc\",\n    measurementId: \"G-VHXGVFL4B8\"\n  };\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig)\n  const db = firebaseApp.firestore();\n  const auth = firebase.auth();\n  const provider = new firebase.auth.GoogleAuthProvider();\n\n  export { db, auth, provider };","import React from 'react'\nimport './Header.css';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout, selectUser } from './features/userSlice';\nimport { auth } from './firebase';\n\nfunction Header() {\n\n    const user = useSelector(selectUser);\n    const dispatch = useDispatch();\n\n    const signOut = () => {\n        auth.signOut().then(() => {\n            dispatch(logout())\n        }) \n    }\n\n    return (\n            <div className=\"Header\">\n                <div className=\"header__left\">\n                    <IconButton>\n                    <MenuIcon />\n                    </IconButton>\n                    <img \n                        src=\"https://cdn.vox-cdn.com/thumbor/8fWz6qpiMYMsZhY4vrc9Vhl5yL8=/0x110:1320x770/fit-in/1200x600/cdn.vox-cdn.com/uploads/chorus_asset/file/21939811/newgmaillogo.jpg\"\n                        alt=\"\"\n                    />\n                </div>\n\n                <div className=\"header__middle\">\n                <SearchIcon />\n                <input placeholder=\"Search mail\" type=\"text\" />\n                <ArrowDropDownIcon className=\"header__inputcaret\" />\n                </div>\n\n                <div className=\"header__right\">\n                    <IconButton>\n                        <AppsIcon />\n                    </IconButton>\n                    <IconButton>\n                        <NotificationsIcon />\n                    </IconButton>\n                    <Avatar onClick={signOut} src={user?.photoUrl}/>\n                </div>\n            </div>\n        )\n    }\n\nexport default Header","import React from 'react'\nimport './SidebarOption.css'\n\nfunction SidebarOption({ Icon, title, number, selected}) {\n    return (\n        <div className={`sidebarOption ${selected && \"sidebarOption--active\"}`}>\n            <Icon />\n            <h3>{title}</h3>\n            <p>{number}</p>\n \n        </div>\n    )\n}\n\nexport default SidebarOption;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const mailSlice = createSlice({\n  name: 'mail',\n  initialState:{\n    selectedMail: null,\n    sendMessageIsOpen: false,\n  },\n  reducers: {\n    selectMail: (state, action) => {\n      state.selectedMail = action.payload;\n    },\n    openSendMessage: (state) => {\n      state.sendMessageIsOpen = true;\n    },\n    CloseSendMessage: (state) => {\n      state.sendMessageIsOpen = false;\n    },\n  },\n});\n\nexport const { selectMail, openSendMessage, CloseSendMessage } = mailSlice.actions;\n\nexport const selectOpenMail = (state) => state.mail.selectedMail;\n\nexport const selectSendMessageIsOpen = (state) => state.mail.sendMessageIsOpen;\n\nexport default mailSlice.reducer;\n","import { Button, IconButton } from \"@material-ui/core\";\nimport React from 'react';\nimport \"./Sidebar.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport SidebarOption from \"./SidebarOption\";\nimport StarIcon from '@material-ui/icons/Star';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport NearMeIcon from '@material-ui/icons/NearMe';\nimport NoteIcon from '@material-ui/icons/Note';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PersonIcon from '@material-ui/icons/Person';\nimport DuoIcon from '@material-ui/icons/Duo';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport { useDispatch } from \"react-redux\";\nimport { openSendMessage } from \"./features/mailSlice\";\n\nfunction Sidebar() {\n\n    const dispatch = useDispatch();\n\n    return (\n        <div className=\"sidebar\">\n            <Button \n            startIcon={<AddIcon fontSize=\"large\" />}\n            className=\"sidebar__compose\"\n            onClick={() => dispatch(openSendMessage())}\n            >\n                Compose\n                </Button>\n\n                <SidebarOption \n                Icon={InboxIcon} \n                title=\"inbox\" \n                number={54} \n                selected={true} />\n                <SidebarOption Icon={StarIcon} title=\"Starred\" number={54} />\n                <SidebarOption Icon={AccessTimeIcon} title=\"Snoozed\" number={54} />\n                <SidebarOption Icon={LabelImportantIcon} title=\"Important\" number={54} />\n                <SidebarOption Icon={NearMeIcon} title=\"Sent\" number={54} />\n                <SidebarOption Icon={NoteIcon} title=\"Drafts\" number={54} />\n                <SidebarOption Icon={ExpandMoreIcon} title=\"More\" number={54} />\n                <div className=\"sidebar__footer\">\n                    <div className=\"sidebar__footerIcons\">\n                    <IconButton>\n                        <PersonIcon />\n                    </IconButton>\n                    <IconButton>\n                        <DuoIcon />\n                    </IconButton>\n                    <IconButton>\n                        <PhoneIcon />\n                    </IconButton>\n                    </div>\n\n                </div>\n\n        </div>\n    )\n}\n\nexport default Sidebar","import { IconButton } from '@material-ui/core';\nimport React from 'react';\nimport  './Mail.css';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport MoveToInboxIcon from '@material-ui/icons/MoveToInbox';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EmailIcon from '@material-ui/icons/Email';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { useHistory } from 'react-router';\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\nimport PrintIcon from '@material-ui/icons/Print';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { useSelector } from 'react-redux';\nimport { selectOpenMail } from './features/mailSlice';\n\n\nfunction Mail() {\n    const history = useHistory();\n\n    const selectedMail = useSelector(selectOpenMail);\n\n    return (\n        <div className=\"mail\">\n            <div className=\"mail__tools\">\n                <div className=\"mail__toolsLeft\">\n                    <IconButton onClick={() => history.push(\"/\")}>\n                        <ArrowBackIcon />\n                    </IconButton>\n\n                    <IconButton>\n                        <MoveToInboxIcon />\n                    </IconButton>\n\n                    <IconButton>\n                        <ErrorIcon />\n                    </IconButton>\n\n                    <IconButton>\n                        <DeleteIcon />\n                    </IconButton>\n\n                    <IconButton>\n                        <EmailIcon />\n                    </IconButton>\n\n                    <IconButton>\n                        <WatchLaterIcon />\n                    </IconButton>\n\n                    <IconButton>\n                        <CheckCircleIcon />\n                    </IconButton>\n\n                    <IconButton>\n                        <LabelImportantIcon />\n                    </IconButton>\n\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>\n\n                </div>\n\n                <div className=\"mail__toolsRight\">\n                    <IconButton>\n                        <UnfoldMoreIcon />\n                    </IconButton>\n\n                    <IconButton>\n                        <PrintIcon />\n                    </IconButton>\n\n                    <IconButton>\n                        <ExitToAppIcon />\n                    </IconButton>\n\n                </div>\n\n            </div>\n            <div className=\"mail__body\">\n                <div className=\"mail__bodyHeader\">\n                <h2>{selectedMail?.subject}</h2>\n                <LabelImportantIcon className=\"mail__important\" />\n                <p>{selectedMail?.title}</p>\n                <p className=\"mail__time\">{selectedMail?.time}</p>\n                </div>\n                <div className=\"mail__message\">\n                    <p>{selectedMail?.description}</p>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Mail","import React from 'react';\nimport \"./Section.css\";\n\nfunction Section({ Icon, title, color, selected}) {\n    return (\n        <div className={`section ${selected && \"section--selected\"}`}\n            style={{\n                borderBottom: `3px solid ${color}`,\n                color: `${selected && color}`,\n            }}>\n                <Icon />\n                <h4>{title}</h4>\n        </div>\n    );\n}\n\nexport default Section;","import React from \"react\";\nimport {  Checkbox, IconButton } from \"@material-ui/core\";\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorder';\nimport LabelImportantOutlinedIcon from '@material-ui/icons/LabelImportant';\nimport \"./EmailRow.css\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { selectMail } from \"./features/mailSlice\";\n\nfunction EmailRow({id, title, subject, description, time}) {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const openMail = () => {\n        dispatch(selectMail({\n            id, \n            title, \n            subject, \n            description, \n            time\n        }))\n\n        history.push(\"/mail\");\n    };\n\n    return (\n        <div onClick={openMail} className=\"emailRow\">\n\n        <div className=\"emailRow__options\">\n            <Checkbox />\n            <IconButton>\n                <StarBorderOutlinedIcon />\n            </IconButton>\n            <IconButton>\n                <LabelImportantOutlinedIcon />\n            </IconButton>\n\n        </div>\n\n        <h3 className=\"emailRow__title\">\n            {title}\n        </h3>\n\n        <div className=\"emailRow__message\">\n        <h4>{subject}\n        <span className=\"emailRow__description\">\n            {description}\n        </span>\n        </h4>\n        </div>\n\n        <p className=\"emailRow__description\">\n        {time}</p>\n\n        </div>\n    )\n}\n\nexport default EmailRow;","import React, { useEffect, useState } from 'react'\nimport { Checkbox, IconButton } from '@material-ui/core'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport KeyboardHideIcon from '@material-ui/icons/KeyboardHide';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport PeopleIcon from '@material-ui/icons/People';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport Section from \"./Section\"\nimport './EmailList.css'\nimport EmailRow from './EmailRow';\nimport { db } from './firebase';\n\nfunction EmailList() {\n\n    const [emails, setEmails] = useState([]);\n\n    useEffect(() => {\n        db.collection('emails').orderBy('timestamp', 'desc').onSnapshot(snapshot => setEmails(snapshot.docs.map(doc => ({\n            id: doc.id,\n            data: doc.data()\n        }))))\n    }, [])\n\n    return (\n        <div className=\"emailList\">\n            <div className=\"emailList__settings\">\n                <div className=\"emailList__settingsLeft\">\n                    <Checkbox />\n                    <IconButton>\n                        <ArrowDropDownIcon />\n                    </IconButton>\n                    <IconButton>\n                        <RedoIcon />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>\n                </div>\n                <div className=\"emailList__settingsRight\">\n                <IconButton>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                    <IconButton>\n                        <ChevronRightIcon />\n                    </IconButton>\n                    <IconButton>\n                        <KeyboardHideIcon />\n                    </IconButton> \n                    <IconButton>\n                        <SettingsIcon />\n                    </IconButton> \n\n                </div>\n        </div>\n        <div className=\"emailList__sections\">\n            <Section Icon={InboxIcon} title='primary' color='red' selected />\n            <Section Icon={PeopleIcon} title='Social' color='#1A73EB' />\n            <Section Icon={LocalOfferIcon} title='Promotions' color='green' />\n        </div>\n\n        <div className=\"emailList__List\"> \n            {emails && emails.map(({id, data: { to, subject, message, timestamp }}) => (\n                <EmailRow \n                    id={id}\n                    key={id}\n                    title={to}\n                    subject={subject}\n                    description={message}\n                    time={new Date(timestamp?.seconds * 1000).toUTCString()}\n                />\n            ))}\n            <EmailRow \n              title=\"Karthik\"\n              subject=\"Hey fellow Partner!!!\"\n              description=\"This is a practice\"\n              time=\"10pm\"\n            />\n               <EmailRow \n              title=\"Karthik\"\n              subject=\"Hey fellow Partner!!!\"\n              description=\"This is a practice\"\n              time=\"10pm\"\n            />\n        </div>\n\n        </div>\n    );\n}\n\nexport default EmailList;","import React from 'react';\nimport './SendMail.css';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Button } from '@material-ui/core';\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from 'react-redux';\nimport { CloseSendMessage } from './features/mailSlice';\nimport { db } from './firebase';\n\n\nfunction SendMail() {\n\n    const dispatch = useDispatch()\n    const { register, handleSubmit, watch, errors } = useForm();\n\n    const onSubmit = (formdata) => {\n        console.log(formdata);\n        db.collection('emails').add(\n            {\n                to: formdata.to,\n                subject: formdata.subject,\n                message: formdata.message,\n                timestamp: new Date(),\n            }\n        )\n\n        dispatch(CloseSendMessage());\n    }\n\n    return (\n        <div className=\"sendMail\">\n            <div className=\"sendMail__header\">\n            <h3>New Message</h3>\n            <CloseIcon onClick={() => dispatch(CloseSendMessage())} className=\"sendMail__close\"/>\n            </div>\n\n            <form onSubmit={handleSubmit(onSubmit)}>\n\n                <input \n                    name='to' \n                    placeholder=\"To\" \n                    type=\"email\" \n                    ref={register({ required: true })}\n                    />\n                    {errors.to && <p className=\"sendMail__error\">To is Required</p>}\n\n                <input \n                    name='subject' \n                    placeholder=\"Subject\" \n                    type=\"text\" \n                    ref={register({ required: true })}\n                    />\n                    {errors.subject && <p className=\"sendMail__error\">Subject is Required</p>}\n\n                <input \n                    name='message'\n                    placeholder=\"Message...\" \n                    type=\"text\" \n                    className=\"sendMail__message\"\n                    ref={register({ required: true })}\n                />\n                {errors.message && <p className=\"sendMail__error\">Message is Required</p>}\n\n            <div className=\"sendMail__options\">\n                <Button \n                className=\"sendMail__send\"\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n                >Send</Button>\n            </div>\n            </form>\n\n        </div>\n    );\n}\n\nexport default SendMail","\nimport { Button } from '@material-ui/core';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from './features/userSlice';\nimport { auth, provider } from './firebase';\nimport \"./Login.css\";\n\nconst Login = () => {\n\n    const dispatch = useDispatch();\n\n    const signIn = () => {\n        auth.signInWithPopup(provider).then(({ user }) => {\n            dispatch(login({\n                displayName: user.displayName,\n                email: user.email,\n                photoUrl: user.photoURL\n            }))\n        }).catch(error => alert(error.message))\n    }\n\n    return (\n        <div className=\"login\">\n            <div className=\"login__container\">\n                <img src=\"https://cdn.vox-cdn.com/thumbor/8fWz6qpiMYMsZhY4vrc9Vhl5yL8=/0x110:1320x770/fit-in/1200x600/cdn.vox-cdn.com/uploads/chorus_asset/file/21939811/newgmaillogo.jpg\"\n                 alt=\"\" />\n                 <Button variant=\"contained\" color=\"primary\" onClick={signIn}>Login</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login;","import React, { useEffect } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Mail from './Mail';\nimport EmailList from \"./EmailList\";\nimport SendMail from \"./SendMail\"\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectSendMessageIsOpen } from './features/mailSlice';\nimport { login, selectUser } from './features/userSlice';\nimport Login from './Login';\nimport { auth } from './firebase';\n\n\nfunction App() {\n\n  const sendMessageIsOpen = useSelector(selectSendMessageIsOpen);\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    auth.onAuthStateChanged(user => {\n      if(user) {\n        //the  user is logged in\n        dispatch(login({\n          displayName: user.displayName,\n          email: user.email,\n          photoUrl: user.photoURL\n        }))\n\n      } else {\n        // the user is logged out\n      }\n    })\n  }, [])\n\n  return (\n    <Router>\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app\">\n        <Header />\n  \n        <div className=\"app__body\">\n  \n       <Sidebar />\n  \n      <Switch>\n      <Route component={Mail} path=\"/mail\" />\n      <Route component={EmailList} path=\"/\" />    \n      </Switch>\n      </div>\n  \n      {sendMessageIsOpen && <SendMail />}\n      </div>\n      )}\n   \n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport mailReducer from '../features/mailSlice';\nimport userReducer from '../features/userSlice';\n\nexport default configureStore({\n  reducer: {\n    mail: mailReducer,\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}